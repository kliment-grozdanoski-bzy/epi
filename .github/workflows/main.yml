name: Build Release
# Generate semver
# Download and install nuget.exe
# Create .nupkg
# Upload artifact
# Create Octo release
# Tag version
# Validate project setup

on:
  workflow_call: #for composition

jobs:
  determine-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.getsemver.outputs.SemVer }}
    env:
      RUNNER_DEBUG: 1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
       
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
      
      - name: get semver
        id: getsemver
        run: | 
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]
          then
            echo "::set-output name=SemVer::${{ steps.gitversion.outputs.SemVer }}"
          else 
            echo "::set-output name=SemVer::${{ steps.gitversion.outputs.MajorMinorPatch }}.${{ steps.gitversion.outputs.PreReleaseNumber }}"
          fi
          
  tag-release:
    runs-on: ubuntu-latest
    needs: [ build-release, determine-version ]
    if: github.ref == 'refs/heads/main' && startsWith(github.repository, 'poc-') 
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Tag
        run: git tag v$SEMVER
      
      - name: Push Tag
        run: git push origin v$SEMVER
          
  build-release:
    runs-on: powerapps
    needs: determine-version
    if: ${{ startsWith(github.repository, 'poc-') }}
    env:
      # proxy setup
      http_proxy: http://gateway.zscloud.net:80
      https_proxy: http://gateway.zscloud.net:80
      no_proxy: localhost,.local,.beazley.com,.internal
      SSL_CERT_FILE: "c:\\opscode\\chef\\embedded\\ssl\\certs\\cacert.pem"
      NODE_EXTRA_CA_CERTS: "c:\\opscode\\chef\\embedded\\ssl\\certs\\cacert.pem"
      
      # job setup
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
      OCTO_SERVER: http://octopusdeploy.bfl.local
      ApplicationName: ${{ github.event.repository.name }}
      ArtifactoryURL: https://artifactory.bfl.local/artifactory/api/nuget/beazley-powerbi-local
      RootPath: ${{ github.workspace }}\src
    steps:

        - name: Checkout Repository
          id: CheckoutRepository
          uses: actions/checkout@v3
            
        - name: Pack
          env: 
            nuspecFile: ${{ env.RootPath }}\${{ env.ApplicationName }}.nuspec
          run: |
            nuget pack ${{ env.nuspecFile }} -Version ${{ env.SEMVER }} -OutputDirectory .
            
        - name: Publish 
          if: github.ref == 'refs/heads/main' 
          env:
            nupkgFile: ${{ github.workspace }}\${{ env.ApplicationName }}.${{ env.SEMVER }}.nupkg
          run: |
            nuget push ${{ env.nupkgFile }} -Source ${{ env.ArtifactoryUrl }} -ApiKey ${{ secrets.ARTIFACTORY_API_KEY }}

        - name: Install Octopus CLI üêô
          uses: OctopusDeploy/install-octopus-cli-action@v1
          if: github.ref == 'refs/heads/main' 
          with:
            version: latest

        - name: Create a release in Octopus Deploy üêô
          uses: OctopusDeploy/create-release-action@v2
          if: github.ref == 'refs/heads/main' 
          env:
            OCTOPUS_API_KEY: ${{ secrets.OCTO_API_KEY }}
            OCTOPUS_HOST: ${{ env.OCTO_SERVER }}
            OCTOPUS_SPACE: 'Spaces-1'
          with:
            project: ${{ env.ApplicationName }}
            release_number: ${{ env.SEMVER }}
            package_version: ${{ env.SEMVER }}
            release_notes_file: ${{ github.workspace }}\release-notes.md
          
  
